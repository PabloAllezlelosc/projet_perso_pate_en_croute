highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label=labels1,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
) %>%  addPolygons(
fillColor = ~pal(LANDES_WITH_DATA_OK@data[,'TOTAL_EXTDR_DEP_15_PER']),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
group='droite',
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label=labels2,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
) %>%
addLegend(
pal = pal1, values = ~LANDES_WITH_DATA_OK@data[,'TOTAL_GAUCHE_DEP_15_PER'], group='gauche'
, opacity = 0.7, title = NULL, position = "bottomright"
) %>%
addLegend(
pal = pal2, values = ~LANDES_WITH_DATA_OK@data[,'TOTAL_EXTDR_DEP_15_PER'], group='droite'
, opacity = 0.7, title = NULL, position = "bottomright"
) %>%
# Layers control
addLayersControl(
baseGroups = c('gauche','droite'),
options = layersControlOptions(collapsed = FALSE)
)
install.packages('shiny')
install.packages('scales')
install.packages("scales")
install.packages("shinydashboard")
install.packages("plotly")
install.packages("DT")
install.packages("shinyBS")
install.packages("shinyjs")
install.packages("shinydashboard")
library("shiny")
library("scales")
library("shinydashboard")
library("plotly")
library("DT")
library("shinyBS")
library("shinyjs")
library("shinydashboard")
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
library(shiny); source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
runApp('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes')
c("toto","titi","tutu") %in% "titi"
c("toto","titi","tutu")[c("toto","titi","tutu") %in% "titi"]
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
source('C:/Users/p.atalya/OneDrive - BetClic Everest Group/Desktop/elections_landes/launcher_shiny.R')
rm(list=ls())
library("dplyr")
library('rgdal')
library('sp')
library('leaflet')
library("readxl")
library("raster")
# On récupère les géométries les plus récentes avec la fonction getData de la librairie Raster. Level5 = communes
FRA <- getData('GADM', country='FRA', level=5)
# On enleve les accents et on passe tous les noms de commune en miniscule sans accent pour faciliter jointures entre noms
# dans l'objet spatial et les noms dans les fichiers xlsx
FRA$NAME_5=tolower(iconv(  FRA$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
LANDES=FRA[FRA$NAME_2 == "Landes",]
# On filtre au niveau departement landes
LANDES=FRA[FRA$NAME_2 == "Landes",]
#View(LANDES@data)
# on importe les resultats des elections
data <- read_excel("C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\Legislatives_2017_T1.xlsx")
colnames(data)[which(names(data) == "LIBSUBCOM")] <- "NAME_5"
data$NAME_5=tolower(iconv(  data$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
# On merge les resultats a l'objet spatial sur la clé "NAME_5"
LANDES_WITH_DATA=merge(LANDES, data , by= "NAME_5")
variable='Legislatives_2017_T1'
# On enlève les communes donnees manquantes pour la variable choisie (exemple parti non present ou commune sans second tour)
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(variable)==FALSE,]
bins1=as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1)))
pal1 <- colorBin("YlOrRd", domain = LANDES_WITH_DATA_OK@data[,variable] , bins = bins1)
labels1 <- sprintf(
paste0("<strong>%s</strong><br/>", variable ," : %g"),
LANDES_WITH_DATA_OK@data$NAME_5, LANDES_WITH_DATA_OK@data[,variable]
) %>% lapply(htmltools::HTML)
# On enleve les accents et on passe tous les noms de commune en miniscule sans accent pour faciliter jointures entre noms
# dans l'objet spatial et les noms dans les fichiers xlsx
FRA$NAME_5=tolower(iconv(  FRA$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
LANDES=FRA[FRA$NAME_2 == "Landes",]
# On filtre au niveau departement landes
LANDES=FRA[FRA$NAME_2 == "Landes",]
#View(LANDES@data)
# on importe les resultats des elections
data <- read_excel("C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\Legislatives_2017_T1.xlsx")
colnames(data)[which(names(data) == "LIBSUBCOM")] <- "NAME_5"
data$NAME_5=tolower(iconv(  data$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
# On merge les resultats a l'objet spatial sur la clé "NAME_5"
LANDES_WITH_DATA=merge(LANDES, data , by= "NAME_5")
variable='Legislatives_2017_T1'
# On enlève les communes donnees manquantes pour la variable choisie (exemple parti non present ou commune sans second tour)
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(variable)==FALSE,]
bins1=as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1)))
pal1 <- colorBin("YlOrRd", domain = LANDES_WITH_DATA_OK@data[,variable] , bins = bins1)
labels1 <- sprintf(
paste0("<strong>%s</strong><br/>", variable ," : %g"),
LANDES_WITH_DATA_OK@data$NAME_5, LANDES_WITH_DATA_OK@data[,variable]
) %>% lapply(htmltools::HTML)
# On enleve les accents et on passe tous les noms de commune en miniscule sans accent pour faciliter jointures entre noms
# dans l'objet spatial et les noms dans les fichiers xlsx
FRA$NAME_5=tolower(iconv(  FRA$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
LANDES=FRA[FRA$NAME_2 == "Landes",]
# On filtre au niveau departement landes
LANDES=FRA[FRA$NAME_2 == "Landes",]
#View(LANDES@data)
# on importe les resultats des elections
data <- read_excel("C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\Legislatives_2017_T1.xlsx")
colnames(data)[which(names(data) == "LIBSUBCOM")] <- "NAME_5"
data$NAME_5=tolower(iconv(  data$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
# On merge les resultats a l'objet spatial sur la clé "NAME_5"
LANDES_WITH_DATA=merge(LANDES, data , by= "NAME_5")
variable='Legislatives_2017_T1'
# On enlève les communes donnees manquantes pour la variable choisie (exemple parti non present ou commune sans second tour)
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(variable)==FALSE,]
bins1=as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1)))
pal1 <- colorBin("YlOrRd", domain = LANDES_WITH_DATA_OK@data[,variable] , bins = bins1)
labels1 <- sprintf(
paste0("<strong>%s</strong><br/>", variable ," : %g"),
LANDES_WITH_DATA_OK@data$NAME_5, LANDES_WITH_DATA_OK@data[,variable]
) %>% lapply(htmltools::HTML)
library("dplyr")
library('rgdal')
library('sp')
library('leaflet')
library("readxl")
library("raster")
# On récupère les géométries les plus récentes avec la fonction getData de la librairie Raster. Level5 = communes
FRA <- getData('GADM', country='FRA', level=5)
# On enleve les accents et on passe tous les noms de commune en miniscule sans accent pour faciliter jointures entre noms
# dans l'objet spatial et les noms dans les fichiers xlsx
FRA$NAME_5=tolower(iconv(  FRA$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
LANDES=FRA[FRA$NAME_2 == "Landes",]
# On filtre au niveau departement landes
LANDES=FRA[FRA$NAME_2 == "Landes",]
#View(LANDES@data)
# on importe les resultats des elections
data <- read_excel("C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\Legislatives_2017_T1.xlsx")
colnames(data)[which(names(data) == "LIBSUBCOM")] <- "NAME_5"
data$NAME_5=tolower(iconv(  data$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
# On merge les resultats a l'objet spatial sur la clé "NAME_5"
LANDES_WITH_DATA=merge(LANDES, data , by= "NAME_5")
variable='Legislatives_2017_T1'
# On enlève les communes donnees manquantes pour la variable choisie (exemple parti non present ou commune sans second tour)
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(LANDES_WITH_DATA_OK[,variable])==FALSE,]
colnames(LANDES_WITH_DATA_OK)
colnames(LANDES_WITH_DATA_OK@data)
variable='UDI_LEG_17'
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(LANDES_WITH_DATA_OK@data[,variable])==FALSE,]
library("dplyr")
library('rgdal')
library('sp')
library('leaflet')
library("readxl")
library("raster")
# On récupère les géométries les plus récentes avec la fonction getData de la librairie Raster. Level5 = communes
FRA <- getData('GADM', country='FRA', level=5)
# On enleve les accents et on passe tous les noms de commune en miniscule sans accent pour faciliter jointures entre noms
# dans l'objet spatial et les noms dans les fichiers xlsx
FRA$NAME_5=tolower(iconv(  FRA$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
LANDES=FRA[FRA$NAME_2 == "Landes",]
# On filtre au niveau departement landes
LANDES=FRA[FRA$NAME_2 == "Landes",]
#View(LANDES@data)
# on importe les resultats des elections
data <- read_excel("C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\Legislatives_2017_T1.xlsx")
colnames(data)[which(names(data) == "LIBSUBCOM")] <- "NAME_5"
data$NAME_5=tolower(iconv(  data$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
# On merge les resultats a l'objet spatial sur la clé "NAME_5"
LANDES_WITH_DATA=merge(LANDES, data , by= "NAME_5")
str(LANDES_WITH_DATA@data)
variable='UDI_LEG_17'
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(LANDES_WITH_DATA@data[,variable])==FALSE,]
str(LANDES_WITH_DATA_OK@data)
bins1=as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1)))
pal1 <- colorBin("YlOrRd", domain = LANDES_WITH_DATA_OK@data[,variable] , bins = bins1)
labels1 <- sprintf(
paste0("<strong>%s</strong><br/>", variable ," : %g"),
LANDES_WITH_DATA_OK@data$NAME_5, LANDES_WITH_DATA_OK@data[,variable]
) %>% lapply(htmltools::HTML)
#-----------------------------------------#
#         Carte tres simple               #
#-----------------------------------------#
m <- leaflet( LANDES_WITH_DATA_OK) %>% addTiles()
m %>% addPolygons(
fillColor = ~pal1(LANDES_WITH_DATA_OK@data[,variable]),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
group='gauche')
bins1
bins1=unique(as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1))))
bins
bins1=unique(as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1))))
bins1
bins1=unique(as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1))))
pal1 <- colorBin("YlOrRd", domain = LANDES_WITH_DATA_OK@data[,variable] , bins = bins1)
labels1 <- sprintf(
paste0("<strong>%s</strong><br/>", variable ," : %g"),
LANDES_WITH_DATA_OK@data$NAME_5, LANDES_WITH_DATA_OK@data[,variable]
) %>% lapply(htmltools::HTML)
#-----------------------------------------#
#         Carte tres simple               #
#-----------------------------------------#
m <- leaflet( LANDES_WITH_DATA_OK) %>% addTiles()
m %>% addPolygons(
fillColor = ~pal1(LANDES_WITH_DATA_OK@data[,variable]),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
group='gauche')
m <- leaflet() %>% addTiles() %>% setView(-0.8, 44, zoom = 9)
m %>%  addPolygons(
data=LANDES_WITH_DATA_OK,
fillColor = ~pal(LANDES_WITH_DATA_OK@data[,variable]),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label=labels1,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)  %>%
addLegend(
data=LANDES_WITH_DATA_OK,
pal = pal1, values = ~LANDES_WITH_DATA_OK@data[,variable]
, opacity = 0.7, title = NULL, position = "bottomright"
)
m <- leaflet() %>% addTiles() %>% setView(-0.8, 44, zoom = 9)
m %>%  addPolygons(
data=LANDES_WITH_DATA_OK,
fillColor = ~pal1(LANDES_WITH_DATA_OK@data[,variable]),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label=labels1,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)  %>%
addLegend(
data=LANDES_WITH_DATA_OK,
pal = pal1, values = ~LANDES_WITH_DATA_OK@data[,variable]
, opacity = 0.7, title = NULL, position = "bottomright"
)
rm(list=ls())
path <- "C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes"
setwd(path)
path <- "C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes"
setwd(path)
#install.packages("rgdal")
#install.packages("sp")
#install.packages("leaflet")
#install.packages("xlsx")
#install.packages("readxl")
#install.packages("GADMTools")
#install.packages("sp",dependencies=TRUE)
#install.packages("RColorBrewer",dependencies=TRUE)
#install.packages("maptools",dependencies=TRUE)
#install.packages("raster")
#install.packages("leaflet",dependencies=TRUE)
#install.packages("rlang")
#install.packages("Rtools")
# install.packages(c("Rcpp","raster"))
#install.packages('dplyr')
library("dplyr")
library('rgdal')
library('sp')
library('leaflet')
library("readxl")
library("raster")
# On récupère les géométries les plus récentes avec la fonction getData de la librairie Raster. Level5 = communes
FRA <- getData('GADM', country='FRA', level=5)
# On enleve les accents et on passe tous les noms de commune en miniscule sans accent pour faciliter jointures entre noms
# dans l'objet spatial et les noms dans les fichiers xlsx
FRA$NAME_5=tolower(iconv(  FRA$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
LANDES=FRA[FRA$NAME_2 == "Landes",]
# On filtre au niveau departement landes
LANDES=FRA[FRA$NAME_2 == "Landes",]
#View(LANDES@data)
# on importe les resultats des elections
data <- read_excel("C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\Legislatives_2017_T1.xlsx")
colnames(data)[which(names(data) == "LIBSUBCOM")] <- "NAME_5"
data$NAME_5=tolower(iconv(  data$NAME_5  , from="UTF-8",to="ASCII//TRANSLIT"  ))
# On merge les resultats a l'objet spatial sur la clé "NAME_5"
LANDES_WITH_DATA=merge(LANDES, data , by= "NAME_5")
str(LANDES_WITH_DATA@data)
# Choix de la variable à mettre sur la carte
variable='UDI_LEG_17'
# On enlève les communes donnees manquantes pour la variable choisie (exemple parti non present ou commune sans second tour)
LANDES_WITH_DATA_OK=LANDES_WITH_DATA[is.na(LANDES_WITH_DATA@data[,variable])==FALSE,]
str(LANDES_WITH_DATA_OK@data)
# On met unique au cas ou des quantiles seraient egaux pr eviter souci
bins1=unique(as.numeric( quantile( LANDES_WITH_DATA_OK@data[,variable] , c(0, 0.2, 0.4, 0.6, 0.8 , 1))))
pal1 <- colorBin("YlOrRd", domain = LANDES_WITH_DATA_OK@data[,variable] , bins = bins1)
labels1 <- sprintf(
paste0("<strong>%s</strong><br/>", variable ," : %g"),
LANDES_WITH_DATA_OK@data$NAME_5, LANDES_WITH_DATA_OK@data[,variable]
) %>% lapply(htmltools::HTML)
#-----------------------------------------#
#         Carte tres simple               #
#-----------------------------------------#
m <- leaflet( LANDES_WITH_DATA_OK) %>% addTiles()
m %>% addPolygons(
fillColor = ~pal1(LANDES_WITH_DATA_OK@data[,variable]),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
group='gauche')
#-----------------------------------------------#
#     Carte un peu plus detaillée avec hover    #
#-----------------------------------------------#
m <- leaflet() %>% addTiles() %>% setView(-0.8, 44, zoom = 9)
m %>%  addPolygons(
data=LANDES_WITH_DATA_OK,
fillColor = ~pal1(LANDES_WITH_DATA_OK@data[,variable]),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label=labels1,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)  %>%
addLegend(
data=LANDES_WITH_DATA_OK,
pal = pal1, values = ~LANDES_WITH_DATA_OK@data[,variable]
, opacity = 0.7, title = NULL, position = "bottomright"
)
library(shiny); source('launcher_shiny_dev.R')
install.packages("rsconnect")
library("rsconnect")
# On se connecte au compte shinyapp, on recupere identifiant sur le compte...
rsconnect::setAccountInfo(name='bva-data-viz',
token='9006602680FD08FDA5B4E2C2D0A46814',
secret='Oo/p3M5Va/9WQXwahkn1dqfxKk9QdA8IyOR0Rvmt')
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
rsconnect::appDependencies()
pkgload::load_all(path= "C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\terra")
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
pkgload::load_all(path= "C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\terra")
# On se connecte au compte shinyapp, on recupere identifiant sur le compte...
rsconnect::setAccountInfo(name='bva-data-viz',
token='9006602680FD08FDA5B4E2C2D0A46814',
secret='Oo/p3M5Va/9WQXwahkn1dqfxKk9QdA8IyOR0Rvmt')
pkgload::load_all(path= "C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes\\terra")
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
install.packages("tinytest")
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
install.packages('terra')
install.packages("terra")
rm(list=ls())
library("dplyr")
library("tinytest")
library('rgdal')
library('sp')
library('leaflet')
library("readxl")
library("raster")
package_info(
pkgs = c("loaded", "attached", "installed")[1],
include_base = FALSE,
dependencies = NA
)
install.packages("sessioninfo")
library("sessioninfo")
package_info(
pkgs = c("loaded", "attached", "installed")[1],
include_base = FALSE,
dependencies = NA
)
install.packages('terra')
install.packages("terra")
package_info(
pkgs = c("loaded", "attached", "installed")[1],
include_base = FALSE,
dependencies = NA
)
library("sessioninfo")
package_info(
pkgs = c("loaded", "attached", "installed")[1],
include_base = FALSE,
dependencies = NA
)
library("raster")
?install.packages
install.packages('terra', repos='https://rspatial.r-universe.dev')
install.packages('raster')
package_info(
pkgs = c("loaded", "attached", "installed")[1],
include_base = FALSE,
dependencies = NA
)
library("raster")
package_info(
pkgs = c("loaded", "attached", "installed")[1],
include_base = FALSE,
dependencies = NA
)
# On se connecte au compte shinyapp, on recupere identifiant sur le compte...
rsconnect::setAccountInfo(name='bva-data-viz',
token='9006602680FD08FDA5B4E2C2D0A46814',
secret='Oo/p3M5Va/9WQXwahkn1dqfxKk9QdA8IyOR0Rvmt')
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
library("shiny")
library("rsconnect")
rsconnect::setAccountInfo(name='bva-data-viz',
token='9006602680FD08FDA5B4E2C2D0A46814',
secret='Oo/p3M5Va/9WQXwahkn1dqfxKk9QdA8IyOR0Rvmt')
deployApp('C:\\Users\\p.atalya\\OneDrive - BetClic Everest Group\\Desktop\\elections_landes')
remotes::install_github("rspatial/terra")
install_github("rspatial/terra")
library("devtools")
install.packages("devtools")
install_github("rspatial/terra")
install_github("rspatial/terra")
install_github("rspatial/terra")
install_github("rspatial/terra")
library("devtools")
install_github("rspatial/terra")
install_github("rspatial/terra")
rm(list=ls())
